name: Push Docker Images to DockerHub

on:
  push:
    branches: [ main ]
    paths:
      - 'images/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'images/**'
  workflow_dispatch:

jobs:
  push-images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Find and process Docker images
      run: |
        echo "开始处理images目录中的Docker镜像..."

        # 检查images目录是否存在
        if [ ! -d "images" ]; then
          echo "images目录不存在，跳过处理"
          exit 0
        fi

        # 查找所有.tar文件
        tar_files=$(find images -name "*.tar" -type f)

        if [ -z "$tar_files" ]; then
          echo "images目录中没有找到.tar文件"
          exit 0
        fi

        # 处理每个tar文件
        for tar_file in $tar_files; do
          echo "处理镜像文件: $tar_file"

          # 加载镜像
          docker load -i "$tar_file"

          # 从文件名推断镜像名和标签
          filename=$(basename "$tar_file" .tar)

          # 获取加载的镜像列表
          loaded_images=$(docker load -i "$tar_file" 2>&1 | grep "Loaded image" | sed 's/Loaded image: //')

          if [ -z "$loaded_images" ]; then
            echo "无法确定加载的镜像名称，跳过 $tar_file"
            continue
          fi

          # 处理每个加载的镜像
          echo "$loaded_images" | while read -r image_name; do
            if [ -n "$image_name" ]; then
              echo "准备推送镜像: $image_name"

              # 检查镜像是否已存在于DockerHub
              if docker manifest inspect "$image_name" > /dev/null 2>&1; then
                echo "镜像 $image_name 已存在于DockerHub，跳过推送"
              else
                echo "推送镜像: $image_name"
                if docker push "$image_name"; then
                  echo "成功推送镜像: $image_name"
                else
                  echo "推送镜像失败: $image_name"
                  exit 1
                fi
              fi
            fi
          done
        done

        echo "所有镜像处理完成"

    - name: Clean up
      run: |
        echo "清理本地镜像..."
        docker system prune -f